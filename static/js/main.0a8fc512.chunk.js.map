{"version":3,"sources":["Images/HorizontalRed1.png","Components/Courses.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","thirdHeading","table","minWidth","image","maxWidth","maxHeight","formLabel","backgroundColor","padding","spacing","textAlign","background","default","tableHead","preReq","syllabusData","Courses","classes","React","useState","expanded","setExpanded","map","row","term","professorName","syllabusUrl","console","log","Data","className","Grid","container","item","xs","src","SCUImage","alt","Typography","variant","course","ExpansionPanel","Subject_Catalog","onChange","panel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","id","Title","Label","ExpansionPanelDetails","Pre_Req","component","Paper","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Values","scope","Link","href","download","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a8fc512.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HorizontalRed1.4512285b.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SCUImage from '../Images/HorizontalRed1.png';\nimport Data from '../Data/MSIS.json';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    color: theme.palette.text.secondary,\n  },\n  thirdHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    color: theme.palette.text.secondary,\n  },\n  table: {\n    minWidth: 650,\n  },\n  image: {\n    maxWidth: 800,\n    maxHeight: 100\n  },\n  formLabel:{\n      backgroundColor: '#bf244a',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.background.default,\n  },\n  tableHead:{\n      backgroundColor: '#bf244a',\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.background.default,\n  },\n  preReq:{\n      backgroundColor: '#dac1c7',\n//      padding: theme.spacing(1),\n       textAlign: 'center',\n//      alignContent:'center',\n//      justify: 'center'\n  }\n}));\nconst syllabusData = [['Fall 2018','Alan Tan','https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'],\n['Spring 2018','Tan Fitch','https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf'],\n['Fall 2020','George Tu','https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf']];\n\nfunction createData(term, professorName, syllabusUrl) {\n  return { term, professorName, syllabusUrl }};\n\nexport const Courses = () => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  const rows = syllabusData.map((row) => (\n      createData(row[0], row[1], row[2])));\n  console.log(Data)\n  return (\n    <div className={classes.root}>\n    <Grid container spacing={3}>\n    <Grid item xs={12}>\n        <img src={SCUImage} alt=\"SCU\" maxHeight=\"50px\"/>\n    </Grid>\n    <Grid item xs={12} className={classes.formLabel}>\n        <Typography variant=\"h3\">MSIS Coursework</Typography>\n     </Grid>\n     <Grid item xs={12}>\n      {Data.map(course => (\n\n      <ExpansionPanel expanded={expanded === course.Subject_Catalog} onChange={handleChange(course.Subject_Catalog)}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon/>}\n        aria-controls=\"panel1bh-content\"\n        id=\"panel1bh-header\"\n      >\n            <Typography className={classes.heading}>{course.Subject_Catalog}</Typography>\n            <Typography className={classes.secondaryHeading}>{course.Title}</Typography>\n            <Typography className={classes.thirdHeading}>{course.Label}</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n      <Grid container spacing={3}>\n      {course.Pre_Req && course.Pre_Req[0] != \"\" && <Grid item container xs={12} component={Paper} className={classes.preReq} >\n        <Grid item xs={4}>\n            <Typography className={classes.heading}>Pre Requisites</Typography>\n        </Grid>\n        <Grid item xs={8}>\n            <Typography className={classes.heading}>{course.Pre_Req}</Typography>\n        </Grid>\n      </Grid>\n      }\n      <Grid item xs={12}>\n        <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\" className={classes.tableHead}>\n                        <Typography variant=\"subtitle2\">Term</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableHead}>\n                        <Typography variant=\"subtitle2\">Professor Name</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableHead}>\n                        <Typography variant=\"subtitle2\">Units</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableHead}>\n                        <Typography variant=\"subtitle2\">Number of Students Enrolled</Typography>\n                    </TableCell>\n                    <TableCell align=\"center\" className={classes.tableHead}>\n                        <Typography variant=\"subtitle2\">Syllabus</Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {course.Values.map((row) => (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                        {row[3]}\n                      </TableCell>\n                      <TableCell align=\"center\">{row[0]}</TableCell>\n                      <TableCell align=\"center\">{row[1]}</TableCell>\n                      <TableCell align=\"center\">{row[2]}</TableCell>\n                      { row[4] && <TableCell align=\"center\">\n                            <Link href={row[4]} download>\n                                {course.Subject_Catalog}_{row[3]}_{row[0]}_Syllabus\n                            </Link>\n                      </TableCell>}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n         </Grid>\n         </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n      ))}\n    </Grid>\n    </Grid>\n    </div>\n  );\n}\n\n\n//import React from 'react';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import Typography from '@material-ui/core/Typography';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import { makeStyles } from '@material-ui/core/styles';\n//import Grid from '@material-ui/core/Grid';\n//import Paper from '@material-ui/core/Paper';\n//import FormLabel from '@material-ui/core/FormLabel';\n//import cyan from '@material-ui/core/colors/cyan';\n//import Button from '@material-ui/core/Button'\n//const useStyles = makeStyles(theme => ({\n//  root: {\n//    width: '100%',\n//    flexGrow: 1,\n//    backgroundColor: theme.palette.background.paper,\n//  },\n//  paper: {\n//    padding: theme.spacing(2),\n//    textAlign: 'center',\n//    color: theme.palette.info.main,\n//    backgroundColor: theme.palette.action.hover\n//  },\n//  formLabel:{\n//      backgroundColor: cyan.A200,\n//      padding: theme.spacing(2),\n//      textAlign: 'center',\n//  }\n//}));\n//\n//export const Courses = ({ courses }) => {\n//    const classes = useStyles();\n//\n//    const handleCourseClick = course => event => {\n//        console.log(\"clicked\", course.TITLE)\n//    }\n//\n//    return (\n//     <div className={classes.root}>\n//      <Grid container spacing={3}>\n//     <Grid item xs={12} className={classes.formLabel}>\n//        <Typography variant=\"h2\">MSIS Coursework</Typography>\n//      </Grid>\n//      {courses.map(course => (\n//        <Grid item xs={12}>\n//          <Paper className={classes.paper}>\n//            <Grid container spacing={2}>\n//                <Grid item xs={4}>\n//                    <Button onClick={handleCourseClick(course)}>{course.CLASS}</Button>\n//                </Grid>\n//                <Grid item xs={4}>{course.TITLE}</Grid>\n//            </Grid>\n//          </Paper>\n//        </Grid>\n//      ))}\n//      </Grid>\n//      </div>\n//\n//    )\n//}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Courses} from \"./Components/Courses\"\n\nfunction App() {\n  const [courses, setCourses] = useState([])\n//  useEffect(() =>{\n//    fetch('/csv').then(response => response.json().then(\n//    data => {\n//    setCourses(data)}\n//    ))\n//  }, [])\n  return (\n    <div className=\"App\">\n        <Courses />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}